name: build

on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
      - 'v*.*.*'
    paths-ignore: ['**/*.md', '*.md', '.dockerignore', '.gitignore', '.vscode/*']
  pull_request:
    branches:
      - 'main'
      - 'feat/*'
      - 'fix/*'
      - 'enhancement/*'
      - 'develop'
    paths-ignore: ['**/*.md', '*.md', '.dockerignore', '.gitignore', '.vscode/*']

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data

      - name: Prepare
        id: prepare
        run: |
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=main
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Build dashboard dist
        env:
          VUE_APP_DATE: ${{ steps.prepare.outputs.created }}
          VUE_APP_RELEASE: ${{ steps.prepare.outputs.tags }}
        run: echo $VUE_APP_DATE && echo $VUE_APP_RELEASE && export NODE_OPTIONS=--max-old-space-size=32768 && npm install -g pnpm && pnpm install && pnpm build
